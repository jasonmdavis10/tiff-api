from planet import api

client = api.Client("5709a2a42720402e8c27104dbdecadb8")

def get_scene_metadata(self, scene_id, scene_type='ortho'):
        """
        Get metadata for a given scene.

        :pa)ram str scene_id: The scene ID
        :param str scene_type: The type: either 'ortho' or 'landsat'
        :return: :py:class:`JSON` body
        """
        # todo: accept/return multiple scenes
        return self._get('scenes/%s/%s' % (scene_type, scene_id)).get_body()

def get_scenes_list(self, scene_type='ortho', order_by=None, count=None,
                        intersects=None, workspace=None, **filters):
        '''Get scenes matching the specified parameters and filters.

        :param str scene_type: The type of scene, defaults to 'ortho'
        :param str order_by: Results order 'acquired asc' or 'acquired desc'.
           Defaults to 'acquired desc'
        :param int count: Number of results per page. Defaults to 50.
        :param intersects: A geometry to filter results by. Can be one of:
           WKT or GeoJSON text or a GeoJSON-like dict.
        :param filters: Zero or more metadata filters in the form of
           param.name.comparison -> value.
        :returns: :py:class:`Scenes` body
        '''
        params = {
            'order_by': order_by,
            'count': count,
            'intersects': intersects
        }
        if workspace:
            params['workspace'] = workspace
        params.update(**filters)
        return self._get('scenes/%s/' % scene_type,
                         models.Scenes, params=params).get_body()
